y[i+1] = A * y[i] + rnorm(1, 0, 1)
}
plot(y, type = 'l')
summary(lm(y[-1] ~ y[-1001]))
plot(x = y[1:1000], y = y[2:1001], col = 'red')
abline(a = 0, b = 1, lw = 2, col = 'blue')
var(y)
y <- rep(0, 1001)
y[1] <- rnorm(1, 0, 1)
A = 0.999
for (i in 1:1000){
y[i+1] = A * y[i] + rnorm(1, 0, 1)
}
plot(y, type = 'l')
summary(lm(y[-1] ~ y[-1001]))
plot(x = y[1:1000], y = y[2:1001], col = 'red')
abline(a = 0, b = 1, lw = 2, col = 'blue')
var(y)
y <- rep(0, 1001)
y[1] <- rnorm(1, 0, 1)
A = 0.999
for (i in 1:1000){
y[i+1] = A * y[i] + rnorm(1, 0, 1)
}
plot(y, type = 'l')
summary(lm(y[-1] ~ y[-1001]))
plot(x = y[1:1000], y = y[2:1001], col = 'red')
abline(a = 0, b = 1, lw = 2, col = 'blue')
var(y)
y <- rep(0, 1001)
y[1] <- rnorm(1, 0, 1)
A = 0.999
for (i in 1:1000){
y[i+1] = A * y[i] + rnorm(1, 0, 1)
}
plot(y, type = 'l')
summary(lm(y[-1] ~ y[-1001]))
plot(x = y[1:1000], y = y[2:1001], col = 'red')
abline(a = 0, b = 1, lw = 2, col = 'blue')
var(y)
y <- rep(0, 1001)
y[1] <- rnorm(1, 0, 1)
A = 0.999
for (i in 1:1000){
y[i+1] = A * y[i] + rnorm(1, 0, 1)
}
plot(y, type = 'l')
summary(lm(y[-1] ~ y[-1001]))
plot(x = y[1:1000], y = y[2:1001], col = 'red')
abline(a = 0, b = 1, lw = 2, col = 'blue')
var(y)
y <- rep(0, 1001)
y[1] <- rnorm(1, 0, 1)
A = 0.999
for (i in 1:1000){
y[i+1] = A * y[i] + rnorm(1, 0, 1)
}
plot(y, type = 'l')
summary(lm(y[-1] ~ y[-1001]))
plot(x = y[1:1000], y = y[2:1001], col = 'red')
abline(a = 0, b = 1, lw = 2, col = 'blue')
var(y)
y <- rep(0, 1001)
y[1] <- rnorm(1, 0, 1)
A = 0.999
for (i in 1:1000){
y[i+1] = A * y[i] + rnorm(1, 0, 1)
}
plot(y, type = 'l')
summary(lm(y[-1] ~ y[-1001]))
plot(x = y[1:1000], y = y[2:1001], col = 'red')
abline(a = 0, b = 1, lw = 2, col = 'blue')
var(y)
y <- rep(0, 1001)
y[1] <- rnorm(1, 0, 1)
A = 0.999
for (i in 1:1000){
y[i+1] = A * y[i] + rnorm(1, 0, 1)
}
plot(y, type = 'l')
summary(lm(y[-1] ~ y[-1001]))
plot(x = y[1:1000], y = y[2:1001], col = 'red')
abline(a = 0, b = 1, lw = 2, col = 'blue')
var(y)
library(quantmod)
getSymbols('^FTSE', env = .GlobalEnv, from = '2003-03-15', to = '2007-02-24', periodicity = 'daily')
base_data <- FTSE$FTSE.Adjusted
returns <- (base_data[-1] - base_data[-nrow(base_data)]) / base_data[-nrow(base_data)]
plot(returns, type = 'l')
returns <- (base_data[-1] - base_data[-nrow(base_data)]) / base_data[-nrow(base_data)] * 100
plot(returns, type = 'l')
base_data <- base_data[complete.cases(base_data)]
plot(base_data, )
plot(base_data)
returns <- (base_data[-1] - base_data[-nrow(base_data)]) / base_data[-nrow(base_data)] * 100
returns
returns <- (as.numeric(base_data[-1]) - as.numeric(base_data[-nrow(base_data)])) / as.numeric(base_data[-nrow(base_data)]) * 100
plot(returns, type = 'l')
summary(lm(returns[-1] ~ returns[-nrow(returns)]))
summary(lm(returns[-1] ~ returns[-length(returns)]))
length(returns)
summary(lm(returns[-1] ~ returns[length(returns)]))
summary(lm(returns[-1] ~ returns[-length(returns)]))
summary(lm(returns[-1] ~ returns[-length(returns)]))[1]
summary(lm(returns[-1] ~ returns[-length(returns)]))[2]
summary(lm(returns[-1] ~ returns[-length(returns)]))[3]
summary(lm(returns[-1] ~ returns[-length(returns)]))[4]
summary(lm(returns[-1] ~ returns[-length(returns)]))[4]
summary(lm(returns[-1] ~ returns[-length(returns)]))$coefficients
summary(lm(returns[-1] ~ returns[-length(returns)]))$coefficients[2,1]
len <- length(returns) - 199
len <- length(returns) - 200
for (i in 1:len){
start <- i
end <- i + 200
AR[i+199] <- summary(lm(returns[(i+1):(i+200)] ~ returns[i:(i+199)]))$coefficients[2,1]
}
len <- length(returns) - 200
for (i in 1:len){
AR <- rep(NA, len)
start <- i
end <- i + 200
AR[i] <- summary(lm(returns[(i+1):(i+200)] ~ returns[i:(i+199)]))$coefficients[2,1]
}
plot(AR)
len <- length(returns) - 200
AR <- rep(NA, len)
for (i in 1:len){
start <- i
end <- i + 200
AR[i] <- summary(lm(returns[(i+1):(i+200)] ~ returns[i:(i+199)]))$coefficients[2,1]
}
plot(AR)
plot(AR, type = 'l')
plot(base_data)
getSymbols('^FTSE', env = .GlobalEnv, from = '2003-03-15', to = '2009-02-24', periodicity = 'daily')
base_data <- FTSE$FTSE.Adjusted
base_data <- base_data[complete.cases(base_data)]
plot(base_data)
returns <- (as.numeric(base_data[-1]) - as.numeric(base_data[-nrow(base_data)])) / as.numeric(base_data[-nrow(base_data)]) * 100
plot(returns, type = 'l')
length(returns)
summary(lm(returns[-1] ~ returns[-length(returns)]))$coefficients[2,1]
len <- length(returns) - 200
AR <- rep(NA, len)
for (i in 1:len){
start <- i
end <- i + 200
AR[i] <- summary(lm(returns[(i+1):(i+200)] ~ returns[i:(i+199)]))$coefficients[2,1]
}
plot(AR, type = 'l')
library(forecast)
trend_returns <- ma(returns, order = 4, centre = T)
plot(trend_returns)
abline(returns)
points(returns)
lines(returns)
plot(trend_returns, lw = 3, col = 'blue')
lines(returns)
plot(trend_returns, lw = 2, col = 'blue')
lines(returns, lw = 0.2)
trend_returns <- ma(returns, order = 4, centre = T)
plot(trend_returns)
len <- length(returns) - 200
AR <- rep(NA, len)
for (i in 1:len){
start <- i
end <- i + 200
AR[i] <- summary(lm(trend_returns[(i+1):(i+200)] ~ trend_returns[i:(i+199)]))$coefficients[2,1]
}
plot(AR, type = 'l')
summary(lm(returns[-1] ~ returns[-length(returns)]))$coefficients[2,1]
summary(lm(returns[-1] ~ returns[-length(returns)]))
AR <- c(rep(0, 200), AR)
plot(AR)
plot(base_data)
par(mfrow = c(2,1))
plot(base_data)
plot(AR)
plot(AR, type = 'l', xlim = c(0.8, 1))
plot(AR, type = 'l', ylim = c(0.8, 1))
plot(AR, type = 'l', ylim = c(0.8, 0.95))
plot(AR, type = 'l', ylim = c(0.8, 0.92))
plot(base_data)
plot(AR, type = 'l', ylim = c(0.8, 0.92))
par(mfrow = c(1,1))
plot(base_data)
trend <- ma(base_data, order = 4, centre = T)
lines(trend)
trend <- ma(base_data, order = 4)
lines(trend)
plot(trend)
par(mfrow = c(2,1))
plot(base_data)
plot(trend, lw = 2)
trend <- ma(base_data, order = 10)
plot(base_data)
plot(trend, lw = 2)
trend <- ma(base_data, order = 20)
plot(trend, lw = 2)
plot(trend, lw = 2)
plot(base_data)
plot(trend, lw = 2)
trend_returns <- ma(returns, order = 20, centre = T)
plot(trend_returns)
len <- length(returns) - 200
AR <- rep(NA, len)
for (i in 1:len){
start <- i
end <- i + 200
AR[i] <- summary(lm(trend_returns[(i+1):(i+200)] ~ trend_returns[i:(i+199)]))$coefficients[2,1]
}
plot(AR, type = 'l')
par(mfrow = c(1,1))
plot(base_data)
plot(AR, type = 'l')
AR <- c(rep(0, 200), AR)
par(mfrow = c(2,1))
plot(base_data)
plot(AR, type = 'l', ylim = c(0.85, 0.98))
library(quantmod)
getSymbols('^FTSE', env = .GlobalEnv, from = '2003-03-15', to = '2009-02-24', periodicity = 'daily')
base_data <- FTSE$FTSE.Adjusted
base_data <- base_data[complete.cases(base_data)]
plot(base_data)
library(KernSmooth)
library(ksmooth)
ksmooth(x = time(base_data), y = base_data)
base_data[1:10]
plot(ksmooth(x = time(base_data), y = base_data))
plot(base_data)
plot(ksmooth(x = time(base_data), y = base_data), type = 'l')
len <- length(returns) - 200
AR <- rep(NA, len)
for (i in 1:len){
start <- i
end <- i + 200
AR[i] <- summary(lm(returns[(i+1):(i+200)] ~ returns[i:(i+199)]))$coefficients[2,1]
}
plot(AR, type = 'l')
plot(returns, type = 'l')
plot(base_data)
plot(AR, type = 'l', lw = 2)
plot(base_data)
plot(AR, type = 'l')
plot(as.numeric(base_data), type = 'l')
plot(AR, type = 'l')
library(forecast)
trend_returns <- ma(returns, order = 5, centre = T)
plot(trend_returns)
trend <- ma(base_data, order = 5, centre = T)
plot(trend)
trend <- ma(base_data, order = 10, centre = T)
plot(trend)
trend_returns <- (trend[-length(trend)] - trend[-1]) / trend[-length(trend)]
len <- length(trend_returns) - 200
AR <- rep(NA, len)
for (i in 1:len){
start <- i
end <- i + 200
AR[i] <- summary(lm(trend_returns[(i+1):(i+200)] ~ trend_returns[i:(i+199)]))$coefficients[2,1]
}
plot(AR, type = 'l')
getSymbols('^FTSE', env = .GlobalEnv, from = '2002-03-15', to = '2009-02-24', periodicity = 'daily')
base_data <- FTSE$FTSE.Adjusted
base_data <- base_data[complete.cases(base_data)]
plot(base_data)
trend <- ma(base_data, order = 10, centre = T)
plot(trend)
plot(trend)
trend_returns <- (trend[-length(trend)] - trend[-1]) / trend[-length(trend)]
len <- length(trend_returns) - 200
AR <- rep(NA, len)
for (i in 1:len){
start <- i
end <- i + 200
AR[i] <- summary(lm(trend_returns[(i+1):(i+200)] ~ trend_returns[i:(i+199)]))$coefficients[2,1]
}
plot(AR, type = 'l')
trend_returns <- ma(returns, order = 20, centre = T)
plot(trend_returns)
trend <- ma(base_data, order = 10, centre = T)
plot(trend)
trend_returns <- (trend[-length(trend)] - trend[-1]) / trend[-length(trend)]
len <- length(trend_returns) - 200
AR <- rep(NA, len)
for (i in 1:len){
start <- i
end <- i + 200
AR[i] <- summary(lm(trend_returns[(i+1):(i+200)] ~ trend_returns[i:(i+199)]))$coefficients[2,1]
}
plot(AR, type = 'l')
plot(trend)
trend <- ma(base_data, order = 20, centre = T)
plot(trend)
trend_returns <- (trend[-length(trend)] - trend[-1]) / trend[-length(trend)]
len <- length(trend_returns) - 200
AR <- rep(NA, len)
for (i in 1:len){
start <- i
end <- i + 200
AR[i] <- summary(lm(trend_returns[(i+1):(i+200)] ~ trend_returns[i:(i+199)]))$coefficients[2,1]
}
plot(AR, type = 'l')
trend <- ma(base_data, order = 2, centre = T)
plot(trend)
trend_returns <- (trend[-length(trend)] - trend[-1]) / trend[-length(trend)]
len <- length(trend_returns) - 200
AR <- rep(NA, len)
for (i in 1:len){
start <- i
end <- i + 200
AR[i] <- summary(lm(trend_returns[(i+1):(i+200)] ~ trend_returns[i:(i+199)]))$coefficients[2,1]
}
plot(AR, type = 'l')
AR <- c(rep(0, 200) AR)
AR <- c(rep(0, 200), AR)
plot(trend_returns)
plot(trend)
plot(trend)
len <- length(trend_returns) - 200
AR <- rep(NA, len)
for (i in 1:len){
start <- i
end <- i + 200
AR[i] <- summary(lm(trend_returns[(i+1):(i+200)] ~ trend_returns[i:(i+199)]))$coefficients[2,1]
}
AR <- c(rep(0, 200), AR)
plot(AR, type = 'l')
trend <- ma(base_data, order = 3, centre = T)
plot(trend)
trend_returns <- (trend[-length(trend)] - trend[-1]) / trend[-length(trend)]
len <- length(trend_returns) - 200
AR <- rep(NA, len)
for (i in 1:len){
start <- i
end <- i + 200
AR[i] <- summary(lm(trend_returns[(i+1):(i+200)] ~ trend_returns[i:(i+199)]))$coefficients[2,1]
}
AR <- c(rep(0, 200), AR)
plot(AR, type = 'l', ylim = c(0.5, 0.7))
trend_returns <- ma(returns, order = 20, centre = T)
plot(trend_returns)
trend <- ma(base_data, order = 3, centre = T)
plot(trend)
trend_returns <- (trend[-length(trend)] - trend[-1]) / trend[-length(trend)]
len <- length(trend_returns) - 200
AR <- rep(NA, len)
for (i in 1:len){
start <- i
end <- i + 200
AR[i] <- summary(lm(trend_returns[(i+1):(i+200)] ~ trend_returns[i:(i+199)]))$coefficients[2,1]
}
AR <- c(rep(NA, 200), AR)
plot(AR, type = 'l', ylim = c(0.5, 0.7))
plot(trend_returns)
trend <- ma(base_data, order = 3, centre = T)
plot(trend)
trend_returns <- (trend[-length(trend)] - trend[-1]) / trend[-length(trend)]
len <- length(trend_returns) - 200
AR <- rep(NA, len)
for (i in 1:len){
start <- i
end <- i + 200
AR[i] <- summary(lm(trend_returns[(i+1):(i+200)] ~ trend_returns[i:(i+199)]))$coefficients[2,1]
}
AR <- c(rep(NA, 200), AR)
plot(AR, type = 'l', ylim = c(0.5, 0.7))
plot(base_data)
lines(trend, col = 'blue', lw = 1.5, alpha = 0.6)
lines(trend, col = 'blue', lw = 1.5)
trend <- ma(base_data, order = 10, centre = T)
lines(trend, col = 'blue')
lines(trend)
trend_returns <- (trend[-length(trend)] - trend[-1]) / trend[-length(trend)]
lines(trend, col = 'blue', lw = 1.5)
trend_returns <- (trend[-length(trend)] - trend[-1]) / trend[-length(trend)]
len <- length(trend_returns) - 200
AR <- rep(NA, len)
for (i in 1:len){
start <- i
end <- i + 200
AR[i] <- summary(lm(trend_returns[(i+1):(i+200)] ~ trend_returns[i:(i+199)]))$coefficients[2,1]
}
AR <- c(rep(NA, 200), AR)
plot(AR, type = 'l'
# Loading packages --------------------------------------------------------
library(quantmod)
library(lubridate)
library(hash)
library(ggplot2)
library(tidyverse)
library(tseries)
setwd("C:/Data/Skola/Bachelor's Thesis/R Codes/LPPL1")
# Data and Grid -----------------------------------------------------------
getSymbols('^HSI', env = .GlobalEnv, from = '1995-02-12', to = '1998-05-24', periodicity = 'daily')
base_data <- HSI$HSI.Adjusted
plot(base_data)
head(base_data)
for (i in 1:length(base_data)){
if (is.na(base_data[i,1]) == T){
base_data[i,1] <- base_data[i-1,1]
}
}
base_data <- log(base_data)
end <- which(time(base_data) == '1997-10-17') - 50
base_data <- base_data[1:end,]
plot(base_data)
# Extracting time in decimal years
base_data$t <- decimal_date(time(base_data))
head(base_data)
colnames(base_data) <- c('price', 't')
head(base_data)
(ABC <- read.csv('ABC.csv'))
setwd("C:/Data/Škola/Bachelor's Thesis/R Codes/LPPL1")
# OLS ---------------------------------------------------------------------
(ABC <- read.csv('ABC.csv'))
best <- 2
t_c <- ABC[best,1]
m <- ABC[best,2]
omega <- ABC[best,3]
phi <- ABC[best,4]
base_data$B <- (t_c - base_data$t)^m
head(base_data)
base_data$C <- ((t_c - base_data$t)^m) * cos(omega * log(abs(t_c - base_data$t)) - phi)
head(base_data)
lmodel <- lm(price ~ B + C, data = base_data)
summary(lmodel)
# Extrapolating -----------------------------------------------------------
end <- which(time(HSI) == '1997-10-17') + 101
data2 <- log(HSI$HSI.Adjusted[1:end])
(data2$time <- decimal_date(time(data2)))
for (i in 1:length(data2)){
if (is.na(data2$HSI.Adjusted[i]) == T){
data2$HSI.Adjusted[i] <- data2$HSI.Adjusted[i-1]
}
}
plot(data2$HSI.Adjusted)
head(data2)
data2$B <- abs((t_c - data2$time))^m
data2$C <- (abs((t_c - data2$time))^m) * cos(omega * log(abs(t_c - data2$time)) - phi)
y_pred <- lmodel$coefficients[1] + lmodel$coefficients[2] * data2$B + lmodel$coefficients[3] * data2$C
# Plotting ----------------------------------------------------------------
plot(as.numeric(data2$HSI.Adjusted), type = 'l')
lines(as.numeric(y_pred), col = 'blue')
abline(v = which.max(y_pred$B), col = 'red')
##### TOP PLOTTING
p2 <- ggplot(data = NULL, mapping = aes(x = decimal_date(time(data2)), y = data2$HSI.Adjusted)) +
geom_line(size = 0.8) +
geom_line(mapping = aes(x = decimal_date(time(data2)), y = y_pred$B), size = 0.8, col = 'blue') +
geom_vline(xintercept = t_c , linetype = 'dashed', size = 0.8, col = 'red') +
geom_vline(xintercept = decimal_date(ymd('1997-10-17')), linetype = 'dashed', size = 0.7, col = 'black') +
geom_vline(xintercept = 1997.6, linetype = 'dotted', size = 0.8, col = 'black') +
ylab("") +
xlab('Time (years)') +
scale_y_continuous(limits = c(8.9, 9.83), expand = c(0,0)) +
scale_x_continuous(limits = c(min(decimal_date(time(data2))),
max(decimal_date(time(data2)))), expand = c(0,0)) +
theme_bw() +
theme(axis.text.x = element_text(face = 'bold', colour = 'black', size = 10),
axis.text.y = element_text(face = 'bold', colour = 'black', size = 9, angle = 45),
axis.title.x = element_text(face = 'bold', colour = 'black', size = 14),
plot.margin = margin(0, 0, 0, 0, 'cm')) +
geom_label(aes(x = 1995.23, y = 9.81), fontface = 2,
label = 'Hang Seng', fill = 'grey')
p2
png('LPPL1_AsianCrisis1.png', width = 900, height = 300)
p2
dev.off()
p2 <- ggplot(data = NULL, mapping = aes(x = decimal_date(time(data2)), y = data2$HSI.Adjusted)) +
geom_line(size = 0.8) +
geom_line(mapping = aes(x = decimal_date(time(data2)), y = y_pred$B), size = 0.8, col = 'blue') +
geom_vline(xintercept = t_c , linetype = 'dashed', size = 0.8, col = 'red') +
geom_vline(xintercept = decimal_date(ymd('1997-10-17')), linetype = 'dashed', size = 0.7, col = 'black') +
geom_vline(xintercept = 1997.6, linetype = 'dotted', size = 0.8, col = 'black') +
ylab("") +
xlab('Time (years)') +
scale_y_continuous(limits = c(8.9, 9.83), expand = c(0,0)) +
scale_x_continuous(limits = c(min(decimal_date(time(data2))),
max(decimal_date(time(data2)))), expand = c(0,0)) +
theme_bw() +
theme(axis.text.x = element_text(face = 'bold', colour = 'black', size = 10),
axis.text.y = element_text(face = 'bold', colour = 'black', size = 9, angle = 45),
axis.title.x = element_text(face = 'bold', colour = 'black', size = 14),
plot.margin = margin(0, 0, 0, 0, 'cm')) +
geom_label(aes(x = 1995.231, y = 9.808), fontface = 2,
label = 'Hang Seng', fill = 'grey')
p2
png('LPPL1_AsianCrisis1.png', width = 900, height = 300)
p2
dev.off()
p2 <- ggplot(data = NULL, mapping = aes(x = decimal_date(time(data2)), y = data2$HSI.Adjusted)) +
geom_line(size = 0.8) +
geom_line(mapping = aes(x = decimal_date(time(data2)), y = y_pred$B), size = 0.8, col = 'blue') +
geom_vline(xintercept = t_c , linetype = 'dashed', size = 0.8, col = 'red') +
geom_vline(xintercept = decimal_date(ymd('1997-10-17')), linetype = 'dashed', size = 0.7, col = 'black') +
geom_vline(xintercept = 1997.6, linetype = 'dotted', size = 0.8, col = 'black') +
ylab("") +
xlab('Time (years)') +
scale_y_continuous(limits = c(8.9, 9.83), expand = c(0,0)) +
scale_x_continuous(limits = c(min(decimal_date(time(data2))),
max(decimal_date(time(data2)))), expand = c(0,0)) +
theme(axis.text.x = element_text(face = 'bold', colour = 'black', size = 10),
axis.text.y = element_text(face = 'bold', colour = 'black', size = 9, angle = 45),
axis.title.x = element_text(face = 'bold', colour = 'black', size = 14),
plot.margin = margin(0, 0, 0, 0, 'cm')) +
geom_label(aes(x = 1995.231, y = 9.808), fontface = 2,
label = 'Hang Seng', fill = 'grey')
p2
png('LPPL1_AsianCrisis1.png', width = 900, height = 300)
p2
dev.off()
